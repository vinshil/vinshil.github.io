<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Go操作Redis</title>
    <url>/2021/02/03/Go%E6%93%8D%E4%BD%9CRedis/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文记录Go中redis的使用</p>
<h2 id="Redis介绍"><a href="#Redis介绍" class="headerlink" title="Redis介绍"></a>Redis介绍</h2><p>Redis是一个开源的内存数据库，Redis提供了多种不同类型的数据结构，很多业务场景下的问题都可以很自然地映射到这些数据结构上。除此之外，通过复制、持久化和客户端分片等特性，我们可以很方便地将Redis扩展成一个能够包含数百GB数据、每秒处理上百万次请求的系统。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h2 id="感谢："><a href="#感谢：" class="headerlink" title="感谢："></a>感谢：</h2><p>感谢以下这些文章的帮助：</p>
<blockquote>
<p><a href="https://www.liwenzhou.com/posts/Go/go_redis/">Go语言操作Redis</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Go</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建博客</title>
    <url>/2021/01/17/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为发现学习一些东西笔记东一点西一点，所以就想放在一个固定的地方，方便一点，找了一些资料，发现 github pages 和 hexo 可以免费搭建博客了（重点是免费），所以就试着搭建了一个，过程和一些坑都记录下。</p>
<h2 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h2><p> GitHub Pages 是一个静态页面搭建托管服务，开搭。如果没有github账号去 <a href="https://github.com/">注册</a> 一个，注册了的</p>
<p>就点击右上角的+号选择 New repository 来建立仓库。在（仓库名）repository name中必须填（重点）：username.github.io 必须是你的github账号名字+github+io。这是固定的格式，Description 是对仓库的说明可以写：xxx的博客，个人博客之类的。仓库选择公开，不公开不能使用github的pages功能，我已经踩过坑了。差不多就是下面这样：</p>
<img src="https://i.loli.net/2021/02/07/rZUIma4Pji6bxGz.png" alt="image-20210117033559349" style="zoom:50%;">

<p>然后来自己电脑上，我的电脑是win 10 的</p>
<p>首先电脑上先安装Git，这是一个在GitHub上拉取资源和上传资源的工具，没有的可以自己在 <a href="https://git-scm.com/downloads">下载</a> 安装下，如果想了解安装的细节的话可以看看廖雪峰老师的 <a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496">Git安装教程</a></p>
<img src="https://i.loli.net/2021/02/07/K7tqHxAV94e8iQF.png" alt="image-20210117033808505" style="zoom:50%;">

<p>鼠标右键打开Git Bash Here ，或者在菜单栏搜索Git Bash打开也可以，设置user.name和user.email配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>生成ssh密钥连接本地和GitHub：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>然后打开在 C:\Users\Administrator.ssh 文件夹中的 id_rsa.pub，复制全部内容，登录GitHub，点击右上角人物头像点击settings设置界面，</p>
<img src="https://i.loli.net/2021/02/07/MAmvdqBiGepOZPj.png" alt="image-20210117033957541.png" style="zoom:40%;">

<p>然后选择SSH这个，再点击New SSH key加上密钥，写上这个密钥的说明，例如：家里的笔记本，台式电脑等，不然密钥多了你会不知道哪个是哪个，复制的内容贴在下面框里就好了，然后点击Add SSH key就好了。</p>
<img src="https://i.loli.net/2021/02/07/6OWHEg9N57Kiv4k.png" alt="image-20210117034216610" style="zoom:50%;">

<p>在Git Bash中检查是否设置密钥成功, 输入<code>ssh git@github.com </code>，如下图就说明成功了。</p>
<p><img src="https://i.loli.net/2021/02/07/Ohvxuk8ZpGJqSU9.png" alt="image-20210117034437859"></p>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>hexo基于node，<a href="https://nodejs.org/en/download/">下载安装</a> node安装包，node包含npm，默认安装好后检查是否安装成功，在Git Bash输入（记得关掉重启下Bash，不然不生效）：node -v ，npm -v</p>
<p><img src="https://i.loli.net/2021/02/07/WTNMtkHZFpl4SOJ.png" alt="image-20210117034630578"></p>
<p>到这里安装hexo的环境都搭建好了</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>​        在电脑里面创建一个一个文件夹，可以命名为Blog之类的，我们的Hexo项目都放这个文件里面。进入文件夹，右键打开Git Bash，这样我们启动Bash后就直接在Blog文件下了</p>
<img src="https://i.loli.net/2021/02/07/CWUg7wObeqkanT3.png" alt="20210117221924" style="zoom:50%;">

<p>打开后是这样的：</p>
<img src="https://i.loli.net/2021/02/07/sp8hx3gXJuI4m2t.png" alt="20210117020241448" style="zoom:50%;">

<p>用npm安装hexo, </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli # 注意在Blog文件夹中输入，安装后输入hexo -v报错：Cannot find module &#x27;hexo&#x27; from &#x27;&#x27;的话使用下面这条命令</span><br><span class="line">npm install hexo-util --save # 上面安装没报错的话不用这条命令</span><br></pre></td></tr></table></figure>
<p>注意：我这里报错提示：系统禁止运行脚本，如果你没有的话跳过这步</p>
<img src="https://i.loli.net/2021/02/07/hKuEgZAHzvS3QVq.png" alt="image-20210118180357726" style="zoom:40%;">

<p>然后点击左边的开发者选择，右边下滑找到PowerShell，勾选允许本地运行PowerShell脚本，点击应用，然后把输入界面重新打开一下，让设置生效就行了</p>
<img src="https://i.loli.net/2021/02/07/XCnHIeOpKA3mjtb.png" alt="image-20210118180450626" style="zoom:40%;">



<p>好了后就可以初始化我们的博客了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init # 注意在Blog文件夹中输入</span><br></pre></td></tr></table></figure>
<p>好了以后就可以启动hexo服务了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g #生产静态页面，默认是4000端口，如果被占可以指定，如：hexo server -p 5000</span><br><span class="line">hexo s #本地启动hexo服务</span><br></pre></td></tr></table></figure>
<p>然后在网址上输入localhost:4000（端口号如果改了的话这里也要改）就可以看到了自己的博客了，到这里博客在本地就搭建好了，但是只能现在这台电脑看的到，所以要用GitHub托管，让其他电脑也看的到</p>
<h2 id="Github-管理博客"><a href="#Github-管理博客" class="headerlink" title="Github 管理博客"></a>Github 管理博客</h2><h3 id="项目上传GitHub"><a href="#项目上传GitHub" class="headerlink" title="项目上传GitHub"></a>项目上传GitHub</h3><p>​        GitHub主线用来放博客项目，用来以后换电脑后可以拉取项目直接写博客，不用重新在本地一点一点搭建，服务托管在分支</p>
<p>打开Blog文件夹里面的_config.yml文件。翻到最后</p>
<ol>
<li>type后面填git</li>
<li>repo后面填仓库地址</li>
<li>branch后面填分支名字</li>
</ol>
<p><img src="https://i.loli.net/2021/02/07/S8QMeYUu3IXmTjg.png" alt="image-20210117021949987"></p>
<p>在Git Bash中下载git</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save # 注意在Blog文件夹中输入</span><br></pre></td></tr></table></figure>
<p>安装好就把准备好的项目上传GitHub主线</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone &#x27;GitHub项目地址&#x27; # 复制GitHub项目到本地，本地会有个与GitHub项目名文件</span><br></pre></td></tr></table></figure>
<img src="https://i.loli.net/2021/02/07/ce4AXr6ShBjzURY.png" alt="image-20210118181529871" style="zoom:80%;">

<p>然后把搭建的博客项目上传到GitHub上去</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add * # 新增文件放入提交缓存中</span><br><span class="line">git commit  -m  &quot;提交说明&quot; # 就是对这次提交的说明</span><br><span class="line">git push -u origin main # 本地项目提交到GitHub主线上，GitHub上会少几个文件，不过不要紧</span><br></pre></td></tr></table></figure>
<p>好了之后GitHub上面就有项目了，以后换电脑就拉取项目直接写博客就行了</p>
<h3 id="GitHub托管博客"><a href="#GitHub托管博客" class="headerlink" title="GitHub托管博客"></a>GitHub托管博客</h3><p>博客部署到GitHub上了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这是hexo g,hexo d的简写，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hexo d 项目部署到GitHub，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 文件修改后要先生成文件，再部署，也就是要先hexo g，后hexo d</span></span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>
<p>推送完在去GitHub项目中设置Pages功能，先登录GitHub，进去博客项目，点击右边的Settings</p>
<img src="https://i.loli.net/2021/02/07/vfHaS6hdEtlUMzc.png" alt="image-20210118172021785" style="zoom:50%;">

<p>下滑找到GitHub Pages，把branch设置成我们在_config.yml上写的分支名字。</p>
<img src="https://i.loli.net/2021/02/07/kHDugOBtViEz4xM.png" alt="image-20210118172312679" style="zoom:50%;">

<p>好了，打开你的 username.github.io 看看吧</p>
<h4 id="hexo命令："><a href="#hexo命令：" class="headerlink" title="hexo命令："></a>hexo命令：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo n &quot;博客&quot;			# 新建博客文章，在Blog\source\_posts文件夹中</span><br><span class="line">hexo g 				 # 生成静态页面</span><br><span class="line">hexo s 			 	 # 本地启动hexo服务</span><br><span class="line">hexo d 				 # 推送到GitHub</span><br><span class="line"></span><br><span class="line">hexo server -p 5000  # 指定端口</span><br><span class="line">hexo clean 			 # 清理缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure>
<h4 id="博客网址标题等修改"><a href="#博客网址标题等修改" class="headerlink" title="博客网址标题等修改"></a><a href="https://hexo.io/zh-cn/docs/configuration">博客网址标题等修改</a></h4><h4 id="博客添加图片"><a href="#博客添加图片" class="headerlink" title="博客添加图片"></a>博客添加图片</h4><h5 id="使用图片插件"><a href="#使用图片插件" class="headerlink" title="使用图片插件"></a>使用图片插件</h5><p>先去项目中_config.yml文件中把post_asset_folder这个选择设为true</p>
<p><img src="https://i.loli.net/2021/02/07/7bgI3kDfFXp19EV.png" alt="image-20210120163629843"></p>
<p>然后在blog文件夹中下载插件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>
<p>安装好了以后，在用 hexo n “xxx” 新建博客时，在/source/_posts文件中除了会有 xxx.md的博客文件还会有一个与博客同名文件夹，博客图片保存在同名文件夹内，使用时在xxxx.md中按照markdown的格式引入图片</p>
<ul>
<li><strong>编辑器写博客</strong></li>
</ul>
<p>在需要图片的地方使用下面这两种方法都行，下面那个就是可以缩小图片，style里面那个就是说图片缩小50%后再显示。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">描述</span>](<span class="link">xxx/图片名字.png</span>)</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;xxx/图片名字.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片无法显示时的替代信息&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>用Typora写博客</strong></li>
</ul>
<p>Typora有保存图片位置的设置，我们把图片保存地址设置为同位置的同名文件夹就行了</p>
<p>点击左上角文件，下拉选项选偏好设置</p>
<img src="https://i.loli.net/2021/02/07/GR1YQr3BeXA8xnc.png" alt="image-20210120165604892" style="zoom: 80%;">

<p>左边点击图像，然后在插入图片地址处点击下拉，选择复制到指定路径</p>
<p><img src="https://i.loli.net/2021/02/07/U8uI5d24oEb9mei.png" alt="image-20210120165805721"></p>
<p>在下面输入框中输入：./${filename} 你截图粘贴的时候就会把图片直接保存在博客同位置的同名文件夹中了，下面这些图片设置选项前三个最好勾上，其他看需求是否需要。</p>
<p><img src="https://i.loli.net/2021/02/07/euvxgd26LoCTJaO.png" alt="image-20210120165928154"></p>
<p>好了，现在博客部署到GitHub上就会显示图片了。</p>
<h3 id="更换博客主题"><a href="#更换博客主题" class="headerlink" title="更换博客主题"></a>更换博客主题</h3><p>将自己喜欢的主题下载到themes文件夹中，这里就是放主题的，我选的是<a href="https://github.com/theme-next/hexo-theme-next">next主题</a>，你也可以选其他喜欢的主题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>修改_config.yml配置，把theme字段配置为新下载的主题：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
<p>本地查看下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清理缓存</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成静态页面</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 本地启动hexo服务</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>我看到<a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly主题</a>的时候又感觉这个好看，换了这个，主题设置可以参考 <a href="https://xiabor.com/">MuJin’s Blog</a> 大佬的博客</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载主题</span></span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装主题依赖</span></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>
<p>图床的话可以选择 <a href="https://sm.ms/">sm.ms</a>、<a href="https://imgchr.com/">路过床床</a>，还可以自己用<a href="https://blog.keepdai.cn/jsdelivr.html">github建立一个图床</a>都行，看自己选择吧</p>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><blockquote>
<p>最后感觉这些文章的帮助：</p>
<p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a></p>
</blockquote>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安装mysql</title>
    <url>/2021/01/18/Ubuntu%E5%AE%89%E8%A3%85mysql/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https://www.mysql.com/">MySQL</a>是最流行的开源关系数据库管理系统。它速度快，容易使用，容易扩展，并且流行的<code>LAMP</code>和<code>LEMP</code>的一部分。安装电脑为Ubuntu 20.04</p>
<h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><h4 id="Ubuntu-版本"><a href="#Ubuntu-版本" class="headerlink" title="Ubuntu 版本"></a>Ubuntu 版本</h4><p>安装东西前看下Ubuntu版本，毕竟有些东西要看看版本能不能兼容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo lsb_release -a</span><br></pre></td></tr></table></figure>
<h4 id="安装MySQL-1"><a href="#安装MySQL-1" class="headerlink" title="安装MySQL"></a>安装MySQL</h4><p>开始安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update # 更新源</span><br><span class="line">sudo apt install mysql-server # 安装mysql-server</span><br></pre></td></tr></table></figure>
<p>检查是否安装成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service mysql start</span><br></pre></td></tr></table></figure>
<p>我这里报错了，如下，你没有报错的话可以跳过这里：</p>
<p><img src="https://i.loli.net/2021/02/07/LKelHRgqnmI2OAP.png" alt="image-20210119175539464"></p>
<p>提示我没有一个文件，最后用了<a href="https://www.cnblogs.com/cnwcl/p/13805643.html">汪成龙老师</a>，解决方法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service mysql stop # 关闭mysql服务</span><br><span class="line">sudo usermod -d /var/lib/mysql/ mysql</span><br><span class="line">sudo service mysql start # 启动mysql服务，大部分报错可以重启mysql服务解决</span><br></pre></td></tr></table></figure>
<h4 id="MySQL配置"><a href="#MySQL配置" class="headerlink" title="MySQL配置"></a>MySQL配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p>按提示设置root密码，密码等级……</p>
<p>好了后以root用户登录mysql</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mysql</span><br></pre></td></tr></table></figure>
<p>创建新用户：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 创建新用户：my_user */</span></span><br><span class="line"><span class="comment">/* host：%表示任意连接，localhost表示只允许本地连接 */</span></span><br><span class="line"><span class="comment">/* 密码：my_passwrod */</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;my_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;my_password&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 查询用户 */</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">user</span>,host <span class="keyword">FROM</span> mysql.user;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 删除用户，默认删除的是&#x27;xxx&#x27;@&#x27;%&#x27;用户，如果要删除&#x27;xxx&#x27;@&#x27;localhost&#x27;，使用drop user &#x27;xxx&#x27;@&#x27;localhost&#x27; */</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> my_user;</span><br></pre></td></tr></table></figure>
<h4 id="允许远程连接MySQL"><a href="#允许远程连接MySQL" class="headerlink" title="允许远程连接MySQL"></a>允许远程连接MySQL</h4><p>修改mysql配置文件：/etc/mysql/mysql.conf.d/mysqld.cnf (老版的话在：/etc/mysql/my.cnf)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure>
<p>找到bind-address = 127.0.0.1 将其注释后保存退出，然后重启下MySQL服务，让配置生效就行了</p>
<p><img src="https://i.loli.net/2021/02/07/U4xOAKBegaRZ9jb.png" alt="image-20210120155503110"></p>
<p>然后可以用MySQL客户端（这个不要求我用的是免费的heidiSQL，用别的也一样）用刚刚创建的账号，连接试试看：</p>
<p><img src="https://i.loli.net/2021/02/07/wlT6m1thROFLZbH.png" alt="image-20210120160018545"></p>
<p>连接上了就好了</p>
<h4 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 创建、查看、删除账号 */</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">user</span>,host <span class="keyword">FROM</span> mysql.user;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 刷新权限 */</span></span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 查看、修改账号是否远程登录,host字段，localhost为本地登录，%为远程登录有ip需要的话，可以把%换成ip */</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">user</span>,host <span class="keyword">FROM</span> mysql.user;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> host <span class="operator">=</span> <span class="string">&#x27;%&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 查看、修改密码强度等级，根据policy字段来改，有些是.policy,有些是_policy，length为密码长度 */</span>;</span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;validate_password%&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password_policy<span class="operator">=</span>LOW;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password_length<span class="operator">=</span><span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 修改账号密码，mysql8.0后修改密码不能使用password字段了 */</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> authentication_string<span class="operator">=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;      <span class="comment">--将字段置为空</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="卸载MySQL"><a href="#卸载MySQL" class="headerlink" title="卸载MySQL"></a>卸载MySQL</h3><p>查看安装的mysql：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dpkg --list|grep mysql</span><br></pre></td></tr></table></figure>
<p>删除mysql：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove mysql-*</span><br></pre></td></tr></table></figure>
<p>清理残留数据：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dpkg -l |grep ^rc|awk &#x27;&#123;print $2&#125;&#x27; |sudo xargs dpkg -P</span><br></pre></td></tr></table></figure>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢以下文章的帮助：</p>
<blockquote>
<p><a href="https://blog.csdn.net/weixin_38924500/article/details/106261971">Ubuntu20.04安装Mysql</a></p>
<p><a href="https://www.jianshu.com/p/7b6b8a5689f0">ubuntu彻底卸载mysql并且重新安装</a></p>
<p><a href="https://blog.csdn.net/qq_26164609/article/details/106881079">Ubunto20.04安装MySQL并修改root用户密码</a></p>
</blockquote>
]]></content>
      <categories>
        <category>服务器</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
