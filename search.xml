<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo搭建博客</title>
    <url>/2021/01/17/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为发现学习一些东西笔记东一点西一点，所以就想放在一个固定的地方，方便一点，找了一些资料，发现 github pages 和 hexo 可以免费搭建博客了（重点是免费），所以就试着搭建了一个，过程和一些坑都记录下。</p>
<a id="more"></a>

<h2 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h2><p> GitHub Pages 是一个静态页面搭建托管服务，开搭。如果没有github账号去 <a href="https://github.com/">注册</a> 一个，注册了的</p>
<p>就点击右上角的+号选择 New repository 来建立仓库。在（仓库名）repository name中必须填（重点）：username.github.io 必须是你的github账号名字+github+io。这是固定的格式，Description 是对仓库的说明可以写：xxx的博客，个人博客之类的。仓库选择公开，不公开不能使用github的pages功能，我已经踩过坑了。差不多就是下面这样：</p>
<img src="../img/Hexo搭建博客/image-20210117033559349.png" alt="image-20210117033559349" style="zoom:67%;" />

<p>然后来自己电脑上，我的电脑是win 10 的</p>
<p>首先电脑上先安装Git，这是一个在GitHub上拉取资源和上传资源的工具，没有的可以自己在 <a href="https://git-scm.com/downloads">下载</a> 安装下，如果想了解安装的细节的话可以看看廖雪峰老师的 <a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496">Git安装教程</a></p>
<img src="../img/Hexo搭建博客/image-20210117033808505.png" alt="image-20210117033808505" style="zoom:50%;" />

<p>鼠标右键打开Git Bash Here ，或者在菜单栏搜索Git Bash打开也可以，设置user.name和user.email配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>生成ssh密钥连接本地和GitHub：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>然后打开在 C:\Users\Administrator.ssh 文件夹中的 id_rsa.pub，复制全部内容，登录GitHub，点击右上角人物头像点击settings设置界面，</p>
<img src="../img/Hexo搭建博客/image-20210117033957541.png" alt="image-20210117033957541.png" style="zoom:40%;" />

<p>然后选择SSH这个，再点击New SSH key加上密钥，写上这个密钥的说明，例如：家里的笔记本，台式电脑等，不然密钥多了你会不知道哪个是哪个，复制的内容贴在下面框里就好了，然后点击Add SSH key就好了。</p>
<img src="../img/Hexo搭建博客/image-20210117034216610.png" alt="image-20210117034216610" style="zoom:50%;" />

<p>在Git Bash中检查是否设置密钥成功, 输入<code>ssh git@github.com </code>，如下图就说明成功了。</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210117034437859.png" alt="image-20210117034437859"></p>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>hexo基于node，<a href="https://nodejs.org/en/download/">下载安装</a> node安装包，node包含npm，默认安装好后检查是否安装成功，在Git Bash输入（记得关掉重启下Bash，不然不生效）：node -v ，npm -v</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210117034630578.png" alt="image-20210117034630578"></p>
<p>到这里安装hexo的环境都搭建好了</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>​        在电脑里面创建一个一个文件夹，可以命名为Blog之类的，我们的Hexo项目都放这个文件里面。进入文件夹，右键打开Git Bash，这样我们启动Bash后就直接在Blog文件下了</p>
<img src="../img/Hexo搭建博客/20210117221924.png" alt="20210117221924" style="zoom:50%;" />

<p>打开后是这样的：</p>
<img src="../img/Hexo搭建博客/image-20210117020241448.png" alt="20210117020241448" style="zoom:50%;" />

<p>用npm安装hexo, </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli # 注意在Blog文件夹中输入，安装后输入hexo -v报错：Cannot find module &#x27;hexo&#x27; from &#x27;&#x27;的话使用下面这条命令</span><br><span class="line">npm install hexo-util --save # 上面安装没报错的话不用这条命令</span><br></pre></td></tr></table></figure>
<p>注意：我这里报错提示：系统禁止运行脚本，如果你没有的话跳过这步</p>
<img src="../img/Hexo搭建博客/image-20210118180357726.png" alt="image-20210118180357726" style="zoom:40%;" />

<p>然后点击左边的开发者选择，右边下滑找到PowerShell，勾选允许本地运行PowerShell脚本，点击应用，然后把输入界面重新打开一下，让设置生效就行了</p>
<img src="../img/Hexo搭建博客/image-20210118180450626.png" alt="image-20210118180450626" style="zoom:40%;" />



<p>好了后就可以初始化我们的博客了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init # 注意在Blog文件夹中输入</span><br></pre></td></tr></table></figure>
<p>好了以后就可以启动hexo服务了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g #生产静态页面，默认是4000端口，如果被占可以指定，如：hexo server -p 5000</span><br><span class="line">hexo s #本地启动hexo服务</span><br></pre></td></tr></table></figure>
<p>然后在网址上输入localhost:4000（端口号如果改了的话这里也要改）就可以看到了自己的博客了，到这里博客在本地就搭建好了，但是只能现在这台电脑看的到，所以要用GitHub托管，让其他电脑也看的到</p>
<h2 id="Github-管理博客"><a href="#Github-管理博客" class="headerlink" title="Github 管理博客"></a>Github 管理博客</h2><h3 id="项目上传GitHub"><a href="#项目上传GitHub" class="headerlink" title="项目上传GitHub"></a>项目上传GitHub</h3><p>​        GitHub主线用来放博客项目，用来以后换电脑后可以拉取项目直接写博客，不用重新在本地一点一点搭建，服务托管在分支</p>
<p>打开Blog文件夹里面的_config.yml文件。翻到最后</p>
<ol>
<li>type后面填git</li>
<li>repo后面填仓库地址（最后没有.git的话要加.git）</li>
<li>branch后面填分支名字（建议放分支，随便写个不是主线的名字就好，会自动建立分支）</li>
</ol>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210117021949987.png" alt="image-20210117021949987"></p>
<p>在Git Bash中下载git</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save # 注意在Blog文件夹中输入</span><br></pre></td></tr></table></figure>
<p>安装好就把准备好的项目上传GitHub主线</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone &#x27;GitHub项目地址&#x27; # 复制GitHub项目到本地，本地会有个与GitHub项目名文件</span><br></pre></td></tr></table></figure>
<img src="../img/Hexo搭建博客/image-20210118181529871.png" alt="image-20210118181529871" style="zoom:80%;" />

<p>然后把搭建的博客项目上传到GitHub上去</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add * # 新增文件放入提交缓存中</span><br><span class="line">git commit  -m  &quot;提交说明&quot; # 就是对这次提交的说明</span><br><span class="line">git push -u origin main # 本地项目提交到GitHub主线上，GitHub上会少几个文件，不过不要紧</span><br></pre></td></tr></table></figure>
<p>好了之后GitHub上面就有项目了，以后换电脑就拉取项目直接写博客就行了</p>
<h3 id="GitHub托管博客"><a href="#GitHub托管博客" class="headerlink" title="GitHub托管博客"></a>GitHub托管博客</h3><p>博客部署到GitHub上了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这是hexo g,hexo d的简写，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hexo d 项目部署到GitHub，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 文件修改后要先生成文件，再部署，也就是要先hexo g，后hexo d</span></span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>
<p>推送完在去GitHub项目中设置Pages功能，先登录GitHub，进去博客项目，点击右边的Settings</p>
<img src="../img/Hexo搭建博客/image-20210118172021785.png" alt="image-20210118172021785" style="zoom:50%;" />

<p>下滑找到GitHub Pages，把branch设置成我们在_config.yml上写的分支名字。</p>
<img src="../img/Hexo搭建博客/image-20210118172312679.png" alt="image-20210118172312679" style="zoom:50%;" />

<p>好了，打开你的 username.github.io 看看吧</p>
<h4 id="hexo命令："><a href="#hexo命令：" class="headerlink" title="hexo命令："></a>hexo命令：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo n &quot;博客&quot;			# 新建博客文章，在Blog\source\_posts文件夹中</span><br><span class="line">hexo g 				 # 生成静态页面</span><br><span class="line">hexo s 			 	 # 本地启动hexo服务</span><br><span class="line">hexo d 				 # 推送到GitHub</span><br><span class="line"></span><br><span class="line">hexo server -p 5000  # 指定端口</span><br><span class="line">hexo clean 			 # 清理缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure>
<h4 id="博客网址标题等修改"><a href="#博客网址标题等修改" class="headerlink" title="博客网址标题等修改"></a><a href="https://hexo.io/zh-cn/docs/configuration">博客网址标题等修改</a></h4><h4 id="博客添加图片"><a href="#博客添加图片" class="headerlink" title="博客添加图片"></a>博客添加图片</h4><p>在博客中加图片可以用两种方法，一种是设置img地址，另一种是使用图片插件，推荐使用第一种方法，简单方便，为啥写了两种，因为我一开始用的是第二种方法， 后面发现了第一种方法，才使用了第一种，两种方法我都没删，都写吧</p>
<h6 id="1、设置img"><a href="#1、设置img" class="headerlink" title="1、设置img"></a>1、设置img</h6><p>在source文件中建立img文件夹</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210120173501178.png" alt="image-20210120173501178"></p>
<p>然后把博客图片都放在在img里面，在博客中引用就行了</p>
<ul>
<li><strong>使用编辑器写博客</strong></li>
</ul>
<p>使用markdown的格式引入图片就行了：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">描述</span>](<span class="link">../img/图片名.png</span>)</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../img/图片名.png&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>我是在img文件夹中还新建了个与博客同名的文件夹，方便管理图片，这个随意，图片全扔img文件夹都可以</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../img/xxx/图片名.png&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>使用Typora编写博客</strong></li>
</ul>
<p>(我是用Typora写的，毕竟方便，会自动帮我再img中建立博客同名文件夹)<br>Typora有保存图片位置的设置，我们把图片保存地址设置上一层文件的img文件就行了</p>
<p>点击左上角文件，下拉选项选偏好设置</p>
<img src="../img/Hexo搭建博客/image-20210120165604892.png" alt="image-20210120165604892" style="zoom: 67%;" />

<p>左边点击图像，然后在插入图片地址处点击下拉，选择复制到指定路径</p>
<img src="../img/Hexo搭建博客/image-20210120165805721.png" alt="image-20210120165805721" style="zoom: 80%;" />

<p>在下面输入框中输入：../img 你截图粘贴的时候就会把图片保存在img文件夹中了，下面这些图片设置选项前三个最好勾上，其他看需求是否需要。</p>
<p>我因为想写博客保存图片时在img里面自动建立与博客同名文件夹，方便管理，就输入的是：../img/${filename} 这样图片会自动保存在img里面的博客同名文件夹，img没有同名文件夹的话会自动新建，比较友好哈</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210120175340824.png" alt="image-20210120175340824"></p>
<p>好了，现在博客部署到GitHub上就会显示图片了。</p>
<h6 id="2、使用图片插件"><a href="#2、使用图片插件" class="headerlink" title="2、使用图片插件"></a>2、使用图片插件</h6><p>先去项目中_config.yml文件中把post_asset_folder这个选择设为true</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210120163629843.png" alt="image-20210120163629843"></p>
<p>然后在blog文件夹中下载插件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>
<p>安装好了以后，在用 hexo n “xxx” 新建博客时，在/source/_posts文件中除了会有 xxx.md的博客文件还会有一个与博客同名文件夹，博客图片保存在同名文件夹内，使用时在xxxx.md中按照markdown的格式引入图片</p>
<ul>
<li><strong>编辑器写博客</strong></li>
</ul>
<p>在需要图片的地方使用下面这两种方法都行，下面那个就是可以缩小图片，style里面那个就是说图片缩小50%后再显示。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">描述</span>](<span class="link">xxx/图片名字.png</span>)</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;xxx/图片名字.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片无法显示时的替代信息&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>用Typora写博客</strong></li>
</ul>
<p>Typora有保存图片位置的设置，我们把图片保存地址设置为同位置的同名文件夹就行了</p>
<p>点击左上角文件，下拉选项选偏好设置</p>
<img src="../img/Hexo搭建博客/image-20210120165604892.png" alt="image-20210120165604892" style="zoom: 80%;" />

<p>左边点击图像，然后在插入图片地址处点击下拉，选择复制到指定路径</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210120165805721.png" alt="image-20210120165805721"></p>
<p>在下面输入框中输入：./${filename} 你截图粘贴的时候就会把图片直接保存在博客同位置的同名文件夹中了，下面这些图片设置选项前三个最好勾上，其他看需求是否需要。</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210120165928154.png" alt="image-20210120165928154"></p>
<p>好了，现在博客部署到GitHub上就会显示图片了。</p>
<h3 id="更换博客主题"><a href="#更换博客主题" class="headerlink" title="更换博客主题"></a>更换博客主题</h3><p>将自己喜欢的主题下载到themes文件夹中，这里就是放主题的，我选的是<a href="https://github.com/theme-next/hexo-theme-next">next主题</a>，你也可以选其他喜欢的主题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>修改_config.yml配置，把theme字段配置为新下载的主题：</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210121111418686.png" alt="image-20210121111418686"></p>
<p>本地查看下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清理缓存</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成静态页面</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 本地启动hexo服务</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>在浏览器输入localhost:4000查看</p>
<p>next主题自带四种主题风格，可以选择自己喜欢的风格。</p>
<p>在主题配置 __config.yml(注意：不是项目的_config文件，用来设置博客，下载的主题themes/next里面也有个config，用来设置主题，我们需要修改的就是主题里面的那个)修改Schemes</p>
<p>默认是Muse主题，我用的是第三个，可以每个都看看，想要哪个就删掉前面的#</p>
<p><img src="../img/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20210121114206016.png" alt="image-20210121114206016"></p>
<p>然后本地查看</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>浏览器输入localhost:4000</p>
<p>选好就可以将新主题部署到GitHub</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>
<h3 id="next主题个性化修改"><a href="#next主题个性化修改" class="headerlink" title="next主题个性化修改"></a>next主题个性化修改</h3><p>博客项目中有个_config.yml是用来配置博客网站的，以下简称站点配置，下载的next主题文件中也有个_config.yml用来设置主题的， 以下简称主题配置</p>
<h4 id="主题风格"><a href="#主题风格" class="headerlink" title="主题风格"></a>主题风格</h4><p>在主题配置中找到Schemes，下面有四个主题风格，取消注释就是应用此风格，可以每个都看下，然后选择自己喜欢的</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Scheme 主题风格</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>
<h4 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h4><p>1、修改主题配置中：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span> 					<span class="comment"># 主页</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span> 				<span class="comment"># 关于我</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span> 				<span class="comment"># 标签</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span> 		<span class="comment"># 分类 </span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span> 	<span class="comment"># 归档</span></span><br><span class="line">  <span class="comment"># schedule: /schedule/ || fa fa-calendar 	# 安排</span></span><br><span class="line">  <span class="comment"># sitemap: /sitemap.xml || fa fa-sitemap 	# 站点地图</span></span><br><span class="line">  <span class="comment"># commonweal: /404/ || fa fa-heartbeat 	# 404公益</span></span><br></pre></td></tr></table></figure>
<p>2、添加标签、分类、关于我页面</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br><span class="line">hexo new page &quot;categories&quot;</span><br><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure>
<p>3、在项目source文件夹中找到新增加的页面：</p>
<ul>
<li>编辑ta</li>
</ul>
<h4 id="添加自定义界面"><a href="#添加自定义界面" class="headerlink" title="添加自定义界面"></a>添加自定义界面</h4><p>1、添加自定义界面</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;customPage&quot;</span><br></pre></td></tr></table></figure>
<p>2、主题配置中增加自定义界面配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span>                         <span class="comment"># 主页</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span>                  <span class="comment"># 关于我</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span>                    <span class="comment"># 标签</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span>          <span class="comment"># 分类 </span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span>         <span class="comment"># 归档</span></span><br><span class="line">  <span class="attr">customPage:</span> <span class="string">/customPage/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-customPage</span>  <span class="comment"># 新增自定义界面</span></span><br></pre></td></tr></table></figure>
<p>3、在source文件夹中找到customPage，根据需求自定义编辑</p>
<h4 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h4><p>1、安装Local Search插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>2、主题配置找到local_search ，enab后面改为true</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="隐藏底部的强力驱动"><a href="#隐藏底部的强力驱动" class="headerlink" title="隐藏底部的强力驱动"></a>隐藏底部的强力驱动</h4><p>修改主题配置的powered</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h4><p>主题配置文件中找到sidebar字段</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line"><span class="comment"># Sidebar Position - 侧栏位置（只对Pisces | Gemini两种风格有效）</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span>        <span class="string">//靠左放置</span></span><br><span class="line">  <span class="comment">#position: right      //靠右放置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效）</span></span><br><span class="line">  <span class="comment">#display: post        //默认行为，在文章页面（拥有目录列表）时显示</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">always</span>       <span class="string">//在所有页面中都显示</span></span><br><span class="line">  <span class="comment">#display: hide        //在所有页面中都隐藏（可以手动展开）</span></span><br><span class="line">  <span class="comment">#display: remove      //完全移除</span></span><br></pre></td></tr></table></figure>
<h4 id="回到顶部按钮"><a href="#回到顶部按钮" class="headerlink" title="回到顶部按钮"></a>回到顶部按钮</h4><p>修改主题配置<strong>back2top</strong>选项</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 将返回按钮设置在侧边栏</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 按钮上显示进度百分比</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h4><p>1、头像图片放入主题文件中**<code>themes/主题/source/images</code>**中</p>
<p>2、修改主题配置，找到**<code>Sidebar Avatar</code>**字段，图片路径放在url后面就行了</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#/images/avatar.gif</span></span><br></pre></td></tr></table></figure>
<h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p>1、站点配置中找到 <code>highlight</code>下面的<code>auto_detect</code>设为<code>ture</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>2、主题配置<code>highlight_theme</code>改为你喜欢的</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br></pre></td></tr></table></figure>
<ul>
<li>normal</li>
<li>night</li>
<li>night eighties</li>
<li>night blue</li>
<li>night bright</li>
</ul>
<h4 id="添加阅读全文"><a href="#添加阅读全文" class="headerlink" title="添加阅读全文"></a>添加阅读全文</h4><p>首页文章不再全部展示，添加阅读文章选项，选择阅读。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">在你的文章中添加&lt;!--more--&gt;,你想再哪儿截止就在哪儿添加</span><br></pre></td></tr></table></figure>
<h4 id="超链接颜色"><a href="#超链接颜色" class="headerlink" title="超链接颜色"></a>超链接颜色</h4><p>要修改超链接样式在<code>themes\next\source\css\_common\components\post\post.styl</code>里,在这里添加条目（注意加在最后）</p>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><blockquote>
<p>最后感觉这些文章的帮助：</p>
<p><a href="http://lyxf.live/posts/2063/">hexo-Next主题美化&lt;一&gt;</a></p>
<p><a href="https://www.cnblogs.com/liziczh/p/9318656.html">Hexo | （二）Next主题个性化设置</a></p>
<p><a href="https://blog.csdn.net/tuckEnough/article/details/107383201">hexo theme next7.8 主题美化</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安装mysql</title>
    <url>/2021/01/18/Ubuntu%E5%AE%89%E8%A3%85mysql/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https://www.mysql.com/">MySQL</a>是最流行的开源关系数据库管理系统。它速度快，容易使用，容易扩展，并且流行的<code>LAMP</code>和<code>LEMP</code>的一部分。安装电脑为Ubuntu 20.04</p>
<a id="more"></a>

<h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><h4 id="Ubuntu-版本"><a href="#Ubuntu-版本" class="headerlink" title="Ubuntu 版本"></a>Ubuntu 版本</h4><p>安装东西前看下Ubuntu版本，毕竟有些东西要看看版本能不能兼容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo lsb_release -a</span><br></pre></td></tr></table></figure>
<h4 id="安装MySQL-1"><a href="#安装MySQL-1" class="headerlink" title="安装MySQL"></a>安装MySQL</h4><p>开始安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update # 更新源</span><br><span class="line">sudo apt install mysql-server # 安装mysql-server</span><br></pre></td></tr></table></figure>
<p>检查是否安装成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service mysql start</span><br></pre></td></tr></table></figure>
<p>我这里报错了，如下，你没有报错的话可以跳过这里：</p>
<p><img src="../img/Ubuntu%E5%AE%89%E8%A3%85mysql/image-20210119175539464.png" alt="image-20210119175539464"></p>
<p>提示我没有一个文件，最后用了<a href="https://www.cnblogs.com/cnwcl/p/13805643.html">汪成龙老师</a>，解决方法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service mysql stop # 关闭mysql服务</span><br><span class="line">sudo usermod -d /var/lib/mysql/ mysql</span><br><span class="line">sudo service mysql start # 启动mysql服务，大部分报错可以重启mysql服务解决</span><br></pre></td></tr></table></figure>
<h4 id="MySQL配置"><a href="#MySQL配置" class="headerlink" title="MySQL配置"></a>MySQL配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p>按提示设置root密码，密码等级……</p>
<p>好了后以root用户登录mysql</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mysql</span><br></pre></td></tr></table></figure>
<p>创建新用户：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 创建新用户：my_user</span><br><span class="line"># host：<span class="operator">%</span>表示任意连接，localhost表示只允许本地连接</span><br><span class="line"># 密码：my_passwrod</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;my_user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;my_password&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 查询用户</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">user</span>,host <span class="keyword">FROM</span> mysql.user;</span><br><span class="line"></span><br><span class="line"># 删除用户，默认删除的是<span class="string">&#x27;xxx&#x27;</span>@<span class="string">&#x27;%&#x27;</span>用户，如果要删除<span class="string">&#x27;xxx&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>，使用<span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;xxx&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> my_user;</span><br></pre></td></tr></table></figure>
<h4 id="允许远程连接MySQL"><a href="#允许远程连接MySQL" class="headerlink" title="允许远程连接MySQL"></a>允许远程连接MySQL</h4><p>修改mysql配置文件：/etc/mysql/mysql.conf.d/mysqld.cnf (老版的话在：/etc/mysql/my.cnf)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure>
<p>找到bind-address = 127.0.0.1 将其注释后保存退出，然后重启下MySQL服务，让配置生效就行了</p>
<p><img src="../img/Ubuntu%E5%AE%89%E8%A3%85mysql/image-20210120155503110.png" alt="image-20210120155503110"></p>
<p>然后可以用MySQL客户端（这个不要求我用的是免费的heidiSQL，用别的也一样）用刚刚创建的账号，连接试试看：</p>
<p><img src="../img/Ubuntu%E5%AE%89%E8%A3%85mysql/image-20210120160018545.png" alt="image-20210120160018545"></p>
<p>连接上了就好了</p>
<h3 id="卸载MySQL"><a href="#卸载MySQL" class="headerlink" title="卸载MySQL"></a>卸载MySQL</h3><p>查看安装的mysql：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dpkg --list|grep mysql</span><br></pre></td></tr></table></figure>
<p>删除mysql：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove mysql-*</span><br></pre></td></tr></table></figure>
<p>清理残留数据：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dpkg -l |grep ^rc|awk &#x27;&#123;print $2&#125;&#x27; |sudo xargs dpkg -P</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
